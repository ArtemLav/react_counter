{"version":3,"sources":["components/Counter.js","App.js","index.js"],"names":["Counter","count","addOne","add100","increase","type","onClick","App","state","setState","prevState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2MA2BeA,G,MAxBC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAQC,EAAlB,EAAkBA,OAAQC,EAA1B,EAA0BA,SAA1B,OACd,oCACE,6CAAeH,IACf,6BACE,4BAAQI,KAAK,SAASC,QAASJ,GAA/B,UAGA,4BAAQG,KAAK,SAASC,QAASH,GAA/B,UAGA,4BAAQE,KAAK,SAASC,QAASF,GAA/B,gBCgCSG,E,4MAxCbC,MAAQ,CACNP,MAAO,G,EAGTC,OAAS,WACP,EAAKO,UAAS,SAAAC,GAAS,MAAK,CAC1BT,MAAOS,EAAUT,MAAQ,O,EAI7BE,OAAS,WACP,EAAKM,UAAS,SAAAC,GAAS,MAAK,CAC1BT,MAAOS,EAAUT,MAAQ,S,EAI7BG,SAAW,WAAO,IACRH,EAAU,EAAKO,MAAfP,MAEJA,EAAQ,IAAM,GAAe,IAAVA,GACrB,EAAKE,SAGP,EAAKD,U,uDAGG,IACAD,EAAUU,KAAKH,MAAfP,MAER,OACE,kBAAC,EAAD,CACEA,MAAOA,EACPC,OAAQS,KAAKT,OACbC,OAAQQ,KAAKR,OACbC,SAAUO,KAAKP,e,GAnCLQ,IAAMC,WCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.eee35979.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Counter = ({ count, addOne, add100, increase }) => (\n  <>\n    <h1>{`Count: ${count}`}</h1>\n    <div>\n      <button type=\"button\" onClick={addOne}>\n        addOne\n      </button>\n      <button type=\"button\" onClick={add100}>\n        add100\n      </button>\n      <button type=\"button\" onClick={increase}>\n        increase\n      </button>\n    </div>\n  </>\n);\n\nCounter.propTypes = {\n  count: PropTypes.number.isRequired,\n  addOne: PropTypes.func.isRequired,\n  add100: PropTypes.func.isRequired,\n  increase: PropTypes.func.isRequired,\n};\n\nexport default Counter;\n","import React from 'react';\nimport './App.scss';\nimport Counter from './components/Counter';\n\nclass App extends React.Component {\n  state = {\n    count: 0,\n  }\n\n  addOne = () => {\n    this.setState(prevState => ({\n      count: prevState.count + 1,\n    }));\n  };\n\n  add100 = () => {\n    this.setState(prevState => ({\n      count: prevState.count + 100,\n    }));\n  };\n\n  increase = () => {\n    const { count } = this.state;\n\n    if (count % 5 === 0 && count !== 0) {\n      this.add100();\n    }\n\n    this.addOne();\n  };\n\n  render() {\n    const { count } = this.state;\n\n    return (\n      <Counter\n        count={count}\n        addOne={this.addOne}\n        add100={this.add100}\n        increase={this.increase}\n      />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}